// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
    {
        "context": "Workspace",
        "bindings": {
            "shift shift": "file_finder::Toggle"
        }
    },
    {
        "context": "Editor && vim_mode == insert",
        "bindings": {
            "k j": "vim::NormalBefore",
            "j k": "vim::NormalBefore"
        }
    },
    {
        "context": "Editor && VimControl && !VimWaiting && !menu",
        "bindings": {
            "space b": "git::Blame",
            "space l f": "editor::Format",
            "space o": "tab_switcher::Toggle",
            "space /": "workspace::NewSearch",
            "n": "search::SelectNextMatch",
            "shift-n": "search::SelectPreviousMatch",
            // This is the copy from default keymaps
            "g shift-r": "vim::PushReplaceWithRegister",
            "g r n": "editor::Rename",
            "g r r": "editor::FindAllReferences",
            "g r i": "editor::GoToImplementation",
            "g r a": "editor::ToggleCodeActions",
            "g g": "vim::StartOfDocument",
            "g h": "editor::Hover",
            "g B": "editor::BlameHover",
            "g t": "pane::ActivateNextItem",
            "g shift-t": "pane::ActivatePreviousItem",
            "g d": "editor::GoToDefinition",
            "g shift-d": "editor::GoToDeclaration",
            "g y": "editor::GoToTypeDefinition",
            "g shift-i": "editor::GoToImplementation",
            "g x": "editor::OpenUrl",
            "g f": "editor::OpenSelectedFilename",
            "g n": "vim::SelectNextMatch",
            "g shift-n": "vim::SelectPreviousMatch",
            "g l": "vim::SelectNext",
            "g shift-l": "vim::SelectPrevious",
            "g >": ["editor::SelectNext", { "replace_newest": true }],
            "g <": ["editor::SelectPrevious", { "replace_newest": true }],
            "g a": "editor::SelectAllMatches",
            "g s": "outline::Toggle",
            "g shift-o": "outline::Toggle",
            "g shift-s": "project_symbols::Toggle",
            "g c a": "editor::ToggleCodeActions", // zed specific
            "g shift-a": "editor::FindAllReferences", // zed specific
            "g space": "editor::OpenExcerpts", // zed specific
            "g *": ["vim::MoveToNext", { "partial_word": true }],
            "g #": ["vim::MoveToPrevious", { "partial_word": true }],
            "g j": ["vim::Down", { "display_lines": true }],
            "g down": ["vim::Down", { "display_lines": true }],
            "g k": ["vim::Up", { "display_lines": true }],
            "g up": ["vim::Up", { "display_lines": true }],
            "g $": ["vim::EndOfLine", { "display_lines": true }],
            "g end": ["vim::EndOfLine", { "display_lines": true }],
            "g 0": ["vim::StartOfLine", { "display_lines": true }],
            "g home": ["vim::StartOfLine", { "display_lines": true }],
            "g shift-m": ["vim::MiddleOfLine", { "display_lines": true }],
            "g ^": ["vim::FirstNonWhitespace", { "display_lines": true }],
            "g v": "vim::RestoreVisualSelection",
            "g ]": "editor::GoToDiagnostic",
            "g [": "editor::GoToPreviousDiagnostic",
            "g i": "vim::InsertAtPrevious",
            "g ,": "vim::ChangeListNewer",
            "g ;": "vim::ChangeListOlder",
            "shift-h": "vim::WindowTop",
            "shift-m": "vim::WindowMiddle",
            "shift-l": "vim::WindowBottom",
            "q": "vim::ToggleRecord",
            "shift-q": "vim::ReplayLastRecording",
            "@": "vim::PushReplayRegister"
        }
    },
    {
        "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
        "bindings": {
            "space f": [
                "task::Spawn",
                { "task_name": "tv files", "reveal_target": "center" }
            ]
        }
    },
    {
        "context": "Workspace && vim_mode == normal",
        "bindings": {
            "l g": [
                "task::Spawn",
                { "task_name": "lazygit", "reveal_target": "center" }
            ],
            "space e": "workspace::ToggleRightDock"
        }
    },
    {
        "context": "vim_mode == insert",
        "bindings": {
            "ctrl-h": "editor::MoveLeft",
            "ctrl-l": "editor::MoveRight",
            "ctrl-k": "editor::MoveUp",
            "ctrl-j": "editor::MoveDown"
        }
    },
    {
        "context": "vim_mode == insert && menu",
        "bindings": {
            "ctrl-k": "editor::ContextMenuPrevious",
            "ctrl-j": "editor::ContextMenuNext"
        }
    },
    {
        "bindings": {
            "ctrl-k": "menu::SelectPrevious",
            "ctrl-j": "menu::SelectNext"
        }
    },
    {
        "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
        "bindings": {
            "shift-j": "editor::MoveLineDown",
            "shift-k": "editor::MoveLineUp"
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            "cmd-k": [
                "projects::OpenRecent",
                {
                    "create_new_window": false
                }
            ],
            "ctrl-x": "tab_switcher::CloseSelectedItem"
        }
    }
]
